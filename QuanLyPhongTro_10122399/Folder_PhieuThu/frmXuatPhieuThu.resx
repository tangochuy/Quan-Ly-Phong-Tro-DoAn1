<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>